import 'package:ml_algo/src/retrieval/kd_tree/kd_tree.dart';
import 'package:ml_dataframe/ml_dataframe.dart';
import 'package:ml_linalg/matrix.dart';
import 'package:test/test.dart';

void main() {
  group('KDTree', () {
    final data = [
      [3.43, 10.91, 11.62, -12.93, -11.66],
      [19.41, -4.96, 3.99, 16.35, 10.57],
      [11.30, 8.89, -17.66, -5.17, 16.20],
      [-8.13, -5.23, 18.01, 1.97, 9.08],
      [13.98, -8.21, 17.01, -5.14, 14.49],
      [-17.65, 13.10, 5.82, 8.61, 14.41],
      [4.16, -4.72, -3.71, -2.32, -13.70],
      [7.29, 11.16, -9.51, -1.89, -18.94],
      [19.81, 3.17, 14.27, 0.05, -17.93],
      [-9.63, 18.82, -14.40, -1.91, -6.58],
      [-10.95, -19.58, 9.05, 17.39, 3.30],
      [4.08, -13.19, -5.71, 18.56, -0.13],
      [2.79, -9.15, 6.56, -18.59, 13.53],
      [-7.56, 11.97, 6.55, -7.54, 15.90],
      [-15.97, -15.95, 7.71, 9.70, 16.94],
      [-15.01, 16.12, -10.42, -17.61, 6.27],
      [7.63, -10.70, 15.09, 10.25, -18.16],
      [0.05, 9.74, 7.08, 15.49, -17.99],
      [-6.48, 1.10, 9.28, 0.90, 6.09],
      [-9.88, -5.66, -16.15, 4.46, 2.34],
    ];
    final matrix = Matrix.fromList(data);

    // ==================================================

    // variances: (126.0925521850586, 126.91996002197266, 123.5212631225586, 117.52980041503906, 168.07708740234375), colIdx=4, mean=1.2015000462532044
    // node vector: [-9.88, -5.66, -16.15, 4.46, 2.34],

    final data21 = [
      [3.43, 10.91, 11.62, -12.93, -11.66],
      [4.16, -4.72, -3.71, -2.32, -13.70],
      [7.29, 11.16, -9.51, -1.89, -18.94],
      [19.81, 3.17, 14.27, 0.05, -17.93],
      [-9.63, 18.82, -14.40, -1.91, -6.58],
      [4.08, -13.19, -5.71, 18.56, -0.13],
      [7.63, -10.70, 15.09, 10.25, -18.16],
      [0.05, 9.74, 7.08, 15.49, -17.99],
    ];
    // variances: (59.09866714477539, 116.76374816894531, 116.69230651855469, 98.6568603515625, 40.0130729675293), colIdx=1, mean=3.1487499475479126
    // node vector: [19.81, 3.17, 14.27, 0.05, -17.93]

    final data22 = [
      [19.41, -4.96, 3.99, 16.35, 10.57],
      [11.30, 8.89, -17.66, -5.17, 16.20],
      [-8.13, -5.23, 18.01, 1.97, 9.08],
      [13.98, -8.21, 17.01, -5.14, 14.49],
      [-17.65, 13.10, 5.82, 8.61, 14.41],
      [-10.95, -19.58, 9.05, 17.39, 3.30],
      [2.79, -9.15, 6.56, -18.59, 13.53],
      [-7.56, 11.97, 6.55, -7.54, 15.90],
      [-15.97, -15.95, 7.71, 9.70, 16.94],
      [-15.01, 16.12, -10.42, -17.61, 6.27],
      [-6.48, 1.10, 9.28, 0.90, 6.09],
      [-9.88, -5.66, -16.15, 4.46, 2.34],
    ];
    // variances: (143.32073974609375, 125.18224334716797, 127.2080307006836, 127.156005859375, 25.040782928466797), colIdx=0, mean=-3.6791666746139526
    // node vector: [2.79, -9.15, 6.56, -18.59, 13.53],

    // ==================================================

    final data31 = [
      [4.16, -4.72, -3.71, -2.32, -13.70],
      [4.08, -13.19, -5.71, 18.56, -0.13],
      [7.63, -10.70, 15.09, 10.25, -18.16],
    ];

    final data32 = [
      [3.43, 10.91, 11.62, -12.93, -11.66],
      [7.29, 11.16, -9.51, -1.89, -18.94],
      [19.81, 3.17, 14.27, 0.05, -17.93],
      [-9.63, 18.82, -14.40, -1.91, -6.58],
      [0.05, 9.74, 7.08, 15.49, -17.99],
    ];
    // variances: (92.4607925415039, 24.75891876220703, 134.03343200683594, 82.81289672851562, 22.875722885131836), colIdx=2, mean=1.8120002746582031
    // node vector: [0.05, 9.74, 7.08, 15.49, -17.99],

    final data33 = [
      [-8.13, -5.23, 18.01, 1.97, 9.08],
      [-17.65, 13.10, 5.82, 8.61, 14.41],
      [-10.95, -19.58, 9.05, 17.39, 3.30],
      [-7.56, 11.97, 6.55, -7.54, 15.90],
      [-15.97, -15.95, 7.71, 9.70, 16.94],
      [-15.01, 16.12, -10.42, -17.61, 6.27],
      [-6.48, 1.10, 9.28, 0.90, 6.09],
      [-9.88, -5.66, -16.15, 4.46, 2.34],
    ];
    // variances: (15.639274597167969, 158.8738250732422, 110.82763671875, 102.77732849121094, 29.002010345458984), colIdx=1, mean=-0.5162497758865356
    // node vector: [-6.48, 1.10, 9.28, 0.90, 6.09],

    final data34 = [
      [19.41, -4.96, 3.99, 16.35, 10.57],
      [11.30, 8.89, -17.66, -5.17, 16.20],
      [13.98, -8.21, 17.01, -5.14, 14.49],
      [2.79, -9.15, 6.56, -18.59, 13.53],
    ];
    // variances: (36.01874923706055, 52.41727066040039, 158.91671752929688, 156.67086791992188, 4.1749701499938965), colIdx=2, mean=2.4750000834465027
    // node vector: [19.41, -4.96, 3.99, 16.35, 10.57],

    // ==================================================

    final data41 = [
      [7.29, 11.16, -9.51, -1.89, -18.94],
      [-9.63, 18.82, -14.40, -1.91, -6.58],
    ];

    final data42 = [
      [3.43, 10.91, 11.62, -12.93, -11.66],
      [19.81, 3.17, 14.27, 0.05, -17.93],
      [0.05, 9.74, 7.08, 15.49, -17.99],
    ];

    final data43 = [
      [-8.13, -5.23, 18.01, 1.97, 9.08],
      [-10.95, -19.58, 9.05, 17.39, 3.30],
      [-15.97, -15.95, 7.71, 9.70, 16.94],
      [-9.88, -5.66, -16.15, 4.46, 2.34],
    ];
    // variances: (8.494620323181152, 39.61582565307617, 159.96327209472656, 34.84424591064453, 33.79667663574219), colIdx=2, mean=4.65500020980835
    // node vector: [-15.97, -15.95, 7.71, 9.70, 16.94],

    final data44 = [
      [-17.65, 13.10, 5.82, 8.61, 14.41],
      [-7.56, 11.97, 6.55, -7.54, 15.90],
      [-15.01, 16.12, -10.42, -17.61, 6.27],
      [-6.48, 1.10, 9.28, 0.90, 6.09],
    ];
    // variances: (22.686025619506836, 32.2110710144043, 59.98536682128906, 95.1883544921875, 20.41921615600586), colIdx=3, mean=-3.9100002348423004
    // node vector: [-6.48, 1.10, 9.28, 0.90, 6.09],

    final data45 = [
      [11.30, 8.89, -17.66, -5.17, 16.20],
    ];

    final data46 = [
      [19.41, -4.96, 3.99, 16.35, 10.57],
      [13.98, -8.21, 17.01, -5.14, 14.49],
      [2.79, -9.15, 6.56, -18.59, 13.53],
    ];

    // ==================================================

    final data51 = [
      [-9.88, -5.66, -16.15, 4.46, 2.34],
    ];

    final data52 = [
      [-8.13, -5.23, 18.01, 1.97, 9.08],
      [-10.95, -19.58, 9.05, 17.39, 3.30],
      [-15.97, -15.95, 7.71, 9.70, 16.94],
    ];

    final data53 = [
      [-7.56, 11.97, 6.55, -7.54, 15.90],
      [-15.01, 16.12, -10.42, -17.61, 6.27],
    ];

    final data54 = [
      [-17.65, 13.10, 5.82, 8.61, 14.41],
      [-6.48, 1.10, 9.28, 0.90, 6.09],
    ];

    final kdTree = KDTree(DataFrame(data, headerExists: false), leafSie: 3);

    test('should build a correct structure', () {
      expect(kdTree.toJson(), {
        'L': 3,
        'R': {
          'V': {
            'DT': 'F32',
            'D': [-9.88, -5.66, -16.15, 4.46, 2.34],
          },
          'I': 4,
          'L': {
            'V': {
              'DT': 'F32',
              'D': [19.81, 3.17, 14.27, 0.05, -17.93],
            },
            'I': 1,
            'L': {
              'S': {
                'DT': 'F32',
                'D': [
                  [4.16, -4.72, -3.71, -2.32, -13.70],
                  [4.08, -13.19, -5.71, 18.56, -0.13],
                  [7.63, -10.70, 15.09, 10.25, -18.16],
                ]
              },
            },
            'R': {
              'V': {
                'DT': 'F32',
                'D': [0.05, 9.74, 7.08, 15.49, -17.99],
              },
              'I': 2,
              'L': {

              },
            },
          }
        },
        'D': 'float32',
      });
    });
  });
}
